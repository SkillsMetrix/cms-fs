import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class Flight {
    private String flightNumber;
    private String origin;
    private String destination;
    private LocalDateTime departureTime;
    private BigDecimal price; 
    private List<Passenger> passengers;

    public Flight(String flightNumber, String origin, String destination, LocalDateTime departureTime, BigDecimal price) {
        this.flightNumber = flightNumber;
        this.origin = origin;
        this.destination = destination;
        this.departureTime = departureTime;
        this.price = price;
        this.passengers = new ArrayList<>();
    }

    public String getFlightNumber() { return flightNumber; }
    public String getOrigin() { return origin; }
    public String getDestination() { return destination; }
    public LocalDateTime getDepartureTime() { return departureTime; }
    public BigDecimal getPrice() { return price; }
    public List<Passenger> getPassengers() { return passengers; }

    public void addPassenger(Passenger passenger) {
        passengers.add(passenger);
    }

    public void removePassenger(String email) {
        passengers.removeIf(p -> p.getEmail().equalsIgnoreCase(email));
    }

    @Override
    public String toString() {
        return String.format("%s (%s -> %s) %s Price: â‚¹%s", 
                flightNumber, origin, destination, departureTime, price);
    }
}



---
package com.model;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Data
@AllArgsConstructor
@NoArgsConstructor
@ToString
public class Passenger {
private String name;
private String email;
 


}

---


package com.service;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import com.model.Flight;

public class BookingService {
	private List<Flight> flights= new ArrayList<Flight>();
	
	public BookingService() {
		 flights.add(new Flight("AI101", "Delhi", "Mumbai", LocalDateTime.now().plusHours(5), BigDecimal.valueOf(5500)));
	}

}
