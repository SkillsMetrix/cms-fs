package com.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.entity.Product;
import com.model.ShoppingCartRequest;
import com.model.ShoppingCartResponse;
import com.service.ShoppingService;

@RestController
@RequestMapping("/shopcart")
public class ProductController {
	@Autowired
	private ShoppingService service;

	 

	@PostMapping("/{userid}/products")
	public ResponseEntity addProducts(@PathVariable Long userid, @RequestBody List<ShoppingCartRequest> reqProdList) {
		ShoppingCartResponse cartResponse=service.processAndSend(userid, reqProdList);
		System.out.println(cartResponse);
		return new ResponseEntity(cartResponse,HttpStatus.CREATED);
		 
	}
	 
}


========

package com.service;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.entity.Product;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.model.ShoppingCartRequest;
import com.model.ShoppingCartResponse;
import com.repo.ShopRepo;
@Service
public class ShoppingService {
	@Autowired
	private ShopRepo repo;
	@Autowired
	private RestTemplate template;
	
	public ShoppingCartResponse processAndSend(Long userId, List<ShoppingCartRequest> shoppingCartRequests) {
		
		ObjectMapper mapper= new ObjectMapper();
		String productServiceURL="http://productMS/products/getproduct/"+
		shoppingCartRequests.stream()
		.map(e -> String.valueOf(e.getProductId()))
		.collect(Collectors.joining(","));
		Product[] productArray=template.getForObject(productServiceURL, Product[].class);
		List<Product> psl= Arrays.asList(productArray);
		System.out.println(psl);
		return null;
		
		
	}

 	 
}
